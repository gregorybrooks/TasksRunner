# ----- MITRE data paths -----
APP_DIR=/app
TASK_FILE=/app/tasks.json
TEST_JSON=test_data.bp.json
TRAIN_JSON=train_data.bp.json
TRAIN_IR_JSON=train_ir_data.json
RESULTS_FILE=/app/results.json
ABSTRACT_MITRE_TRAIN_FILE=abstract-8d-inclusive.train.update2.bp.json
ABSTRACT_MITRE_DEV_FILE=abstract-8d-inclusive.devtest.update2.bp.json
ABSTRACT_MITRE_TEST_FILE=abstract-8d-inclusive.analysis.update2.bp.json
BASIC_MITRE_TRAIN_FILE=basic.eng-provided-72.0pct.train-70.0pct.d.bp-4.json
BASIC_MITRE_DEV_FILE=basic.eng-provided-72.0pct.devtest-15.0pct.ref.d.bp-4.json
BASIC_MITRE_TEST_FILE=basic.eng-provided-72.0pct.analysis-15.0pct.ref.d.bp-4.json


# ----- ISI data paths -----
TMP_DIR=/app/tmp/
LOGS_DIR=/app/tmp/logs/
SCORE_FILE=/app/tmp/score.txt

# Prefix attached to ISI split converted from MITRE train set:
MITRE_TRAIN_ISI_PREFIX=mitre-train
# Name of the ISI train file generated from MITRE train:
ISI_TRAIN_FILE=mitre-train-train.json
# Name of the ISI dev file generated from MITRE train:
ISI_DEV_FILE=mitre-train-dev.json
# Name of the ISI test file generated from MITRE train:
ISI_TEST_FILE=mitre-train-test.json

# The output of converting /app/test_data.bp.json goes to here:
INGEST_TEST_DIR=/app/tmp/ingest_test/
# The output of converting /app/train_data.bp.json goes to here:
INGEST_TRAIN_DIR=/app/tmp/ingest_train/
# The output of converting existing MITRE train, devtest, and analysis files goes here:
INGEST_PREEXISTING_MITRE_DATA_DIR=/app/tmp/ingest_preexisting_mitre_data
# The output of splitting the preexisting MITRE train data into ISI train, dev,
# and test files and converting them to the ISI format goes here:
INGEST_PREEXISTING_MITRE_TRAIN_ISI_SPLIT_DIR=/app/tmp/ingest_preexisting_mitre_train_isi_split
# The output of augmenting files from INGEST_PREEXISTING_MITRE_DATA_DIR goes here:
AUGMENT_PREEXISTING_MITRE_DATA_DIR=/app/tmp/augment_preexisting_mitre_data
# The output of augmenting files from
# INGEST_PREEXISTING_MITRE_TRAIN_ISI_SPLIT_DIR goes here:
AUGMENT_PREEXISTING_MITRE_TRAIN_ISI_SPLIT_DIR=/app/tmp/augment_preexisting_mitre_train_isi_split
AUGMENT_TRAIN_DIR=/app/tmp/augment_train
AUGMENT_TEST_DIR=/app/tmp/augment_test
AUGMENT_TEST_DIR_2=/app/tmp/augment_test_2
ARABIC_TOKENIZE_PREEXISTING_MITRE_DATA_DIR=/app/tmp/arabic_tokenize_preexisting_mitre_data/
ARABIC_TOKENIZE_TRAIN_DIR=/app/tmp/arabic_tokenize_train/
ARABIC_TOKENIZE_TEST_DIR=/app/tmp/arabic_tokenize_test/
ARABIC_RETOKENIZE_PREEXISTING_MITRE_DATA_DIR=/app/tmp/arabic_retokenize_preexisting_mitre_data/
ARABIC_RETOKENIZE_TRAIN_DIR=/app/tmp/arabic_retokenize_train/
ARABIC_RETOKENIZE_TEST_DIR=/app/tmp/arabic_retokenize_test/
NAME_FINDING_TEST_DIR=/app/tmp/name_finding_test
# TODO: We should project ISI_SPLIT files as well, but we don't have time now,
#       and those files won't be used during evaluation â€” they are just used
#       during development.
TRANSLATE_PREEXISTING_MITRE_DATA_DIR=/app/tmp/translate_preexisting_mitre_data
TRANSLATE_TRAIN_DIR=/app/tmp/translate_train
TRANSLATE_TEST_DIR=/app/tmp/translate_test
ARABIC_MENTIONS_TEST_DIR=/app/tmp/arabic_mentions_test
ENGLISH_MENTIONS_TEST_DIR=/app/tmp/english_mentions_test
EVENTS_TEST_DIR=/app/tmp/events_test
TRIGGERS_TEST_DIR=/app/tmp/triggers_test
ARGUMENTS_TEST_DIR=/app/tmp/arguments_test
VOTE_TEST_DIR=/app/tmp/vote_test
POSTPROCESS_PREEXISTING_MITRE_DATA_DIR=/app/tmp/postprocess_preexisting_mitre_data/
POSTPROCESS_TRAIN_DIR=/app/tmp/postprocess_train/
POSTPROCESS_TEST_DIR=/app/tmp/postprocess_test


# ------ Arabic text prep -----
# Path specific sentence limit
ARABIC_TEXT_PREP_MAX_WORD_PER_SENTENCE_ABSTRACT_A_MDR=80
ARABIC_TEXT_PREP_MAX_WORD_PER_SENTENCE_ABSTRACT_A_BOS=70
ARABIC_TEXT_PREP_MAX_WORD_PER_SENTENCE_ABSTRACT_B=70
# Fallback sentence limit
ARABIC_TEXT_PREP_MAX_WORD_PER_SENTENCE=80

# ------ Augment with pre-processing ------
# Here you may pass flags like --segment-sentences to augment_with_flexnlp.
AUGMENT_JSON_WITH_FLEXNLP_ADDITIONAL_FLAGS=

# ----- Extract Events service specific variables -----
# fine-tune or train from scratch?
EXTRACT_EVENTS_FINE_TUNE=false
# Set to true if you want to compare fine-tuning and training-from-scratch
# results development.
EXTRACT_EVENTS_SCORE_RESULTS=false
# Which MDR model to use to extract events?
# Either "pipeline-attention" or "biaffine".
EXTRACT_EVENTS_MODEL_ABSTRACT_MDR=pipeline-attention
# Which Boston model to use to extract events?
# Either "bert" or "better-mlm"
EXTRACT_EVENTS_TRIGGER_DECTION_MODEL_ABSTRACT_A_BOS=bert
EXTRACT_EVENTS_TRIGGER_DECTION_MODEL_ABSTRACT_B_BOS=better-mlm

# ----- BERT BIO -----
BERT_BIO_TRIGGER_DECTION_NUM_TRAIN_EPOCHS=50

# ----- Argument Attachment -----
AA_ADDITIONAL_PREDICT_FLAGS=--exclude_overlong_sentences
AA_ADDITIONAL_TRAIN_FLAGS=--exclude_overlong_sentences
AA_NUM_TRAIN_EPOCHS=40

# ----- Postprocess -----
# Here you can pass extra flags like --no-mitre, etc.
POSTPROCESSOR_ADDITIONAL_FLAGS=
# Whether to score the output. POSTPROCESSOR_SCORE_REFERENCE_FILE must be set if this is true.
POSTPROCESSOR_SCORE=false
# What file to use as a reference when scoring? For arabic 500 events file,
# it's `/code/better-events/data/mitre/abstract.arb.500-events.no_doc_entry.d.bp.json`.
POSTPROCESSOR_SCORE_REFERENCE_FILE=
# What additional parameters to add to the scorer? The value, if not empty,
# will be appended to the default score params. Add `-v` to output score
# breakdown, for example.
POSTPROCESSOR_ADDITIONAL_SCORE_PARAMETERS=

# ----- Development -----
DEBUG=false
# Either "production" or "development". Used in choosing appropriate files.
# 2020-10-08: Argument-attachment models for production are not ready yet.
BUILD=production
# Complete the pipeline as soon as possible. Reduce training epochs, etc. Works
# only when DEBUG=false.
HURRY_UP=false
